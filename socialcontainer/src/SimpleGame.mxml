<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   creationComplete="init();"
			   frameRate="41"
			   xmlns:mx="library://ns.adobe.com/flex/halo" width="730" height="730" xmlns:friendsPanel="ua.com.syo.simplegame.view.components.friendsPanel.*" xmlns:targets="ua.kiev.djm.core.log.targets.*" currentState="expand" xmlns:mx1="library://ns.adobe.com/flex/mx" xmlns:topPanel="ua.com.syo.simplegame.view.components.topPanel.*">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.managers.FocusManager;
			import mx.managers.SystemManager;
			
			import ua.com.syo.simplegame.model.CommandSeneder;
			import ua.com.syo.simplegame.model.Model;
			import ua.com.syo.simplegame.model.net.social.VKData;
			import ua.com.syo.simplegame.view.UIManager;
			private var externalSwf:Object;
			
			public var testVar:String = "!!!!!!!!!!!!!!!";
			
			private function loadCompleteHandler(event:Event):void {
				externalSwf = event.target.content;
			}				

			private function startLevel(levelNum:int):void {
				externalSwf.connectTest(levelNum);
				(externalSwf as DisplayObject).addEventListener(DataEvent.DATA, dataHandler);
				currentState = 'collapse';
				stage.quality = StageQuality.MEDIUM;
				gameLoader.setFocus();
			}
			
			public function innerCall(scoreNum:String):void {
				Alert.show("result: " + scoreNum, "Game result", 4, null, aletCloseHandler);
				//currentState = 'expand';
				CommandSeneder.send("save", {score:scoreNum});
				stage.quality = StageQuality.BEST;
			}
			
			private function aletCloseHandler(event:Event):void {
				currentState = 'expand';
			}
			
			private function dataHandler(event:DataEvent):void {
				innerCall(event.data);
			}
			
		]]>
	</fx:Script>
	<fx:Script source="ua/com/syo/simplegame/controller/Controller.as" />
	<s:states>
		<s:State name="expand"/>
		<s:State name="collapse"/>
	</s:states>
	<s:Rect width="{width}" height="{height}">
		<s:fill>
			<s:SolidColor color="0x00789F" />
		</s:fill>
	</s:Rect>
	<mx1:SWFLoader id="gameLoader" width="100%" height="100%"  source="D:\_work\SocialFramework\SocialPS\bin\Main.swf" complete="loadCompleteHandler(event)"/>
	<!--<mx1:SWFLoader id="gameLoader" width="100%" height="100%"  source="http://89.252.12.14:2080/Main.swf" complete="loadCompleteHandler(event)"/>-->
	<s:Group width="100%" height="100%">
		<friendsPanel:FriendsPanel id="friendPanel" x="4" bottom="4" x.collapse="4" bottom.collapse="-120"/>
		<s:Button id="hideButton" label="v" height="30" width="30" click="{if (currentState != 'collapse') {currentState = 'collapse'; hideButton.label = '^'} else {currentState = 'expand'; hideButton.label = 'v' }}"  x="693" y="693"/>
		<s:Button id="startButton" height="30"  click="startLevel(1);" x="10" y="129" width="70" label="Level 1" includeIn="expand"/>
		<s:Button id="startButton0" height="30"  click="startLevel(2);" x="9" y="163" width="70" label="Level 2" includeIn="expand"/>
		<s:Button id="bankButton" height="49"  click="UIManager.instance.showPopup('bank');" x="6" y="568" width="82" label="Bank" includeIn="expand"/>
		<topPanel:TopPanel id="topPanel" x="4" top="4" x.collapse="4" top.collapse="-120"/>
	</s:Group>
	
	
	<!--<targets:FlexLogPanel autoShow="false"/>-->
	<s:transitions>
		<s:Transition id="myTransition" fromState="expand" toState="collapse">
			<s:Parallel id="t1" targets="{[friendPanel, topPanel]}">
				<mx1:Move  duration="200"/>
			</s:Parallel>
		</s:Transition>
		<s:Transition id="myTransition1" fromState="collapse" toState="expand">
			<s:Parallel id="t2" targets="{[friendPanel, topPanel]}">
				<mx1:Move  duration="200"/>
			</s:Parallel>
		</s:Transition>
	</s:transitions>

</s:Application>
